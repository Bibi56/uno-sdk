plugins {
    id 'java'
    id 'java-library'
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow"
}

ext.moduleName = "${group}.uno_awt"

dependencies {

    implementation "$kot-stdlib-jdk8"
    implementation "$kot-reflect"

    implementation "$kx:gln:$gln_version"
    implementation "${kx}.glm:glm:$glm_version"
    implementation "$kx:kool:$kool_version"

    ["", "-jawt", "-opengl", "-glfw"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        if (it != "-vulkan" && it != "-jawt")
            runtimeOnly "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    api project(":uno-core")
}

compileKotlin {
    // Enable Kotlin compilation to Java 8 class files with method parameter name metadata
    kotlinOptions {
        jvmTarget = "11"
//        javaParameters = true
    }
    // As per https://stackoverflow.com/a/47669720
    // See also https://discuss.kotlinlang.org/t/kotlin-support-for-java-9-module-system/2499/9
    destinationDir = compileJava.destinationDir
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
//        javaParameters = true
    }
}

compileJava {
    dependsOn(':compileKotlin')
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--patch-module', "$moduleName=${sourceSets["main"].output.asPath}"]
        classpath = files()
    }
}

jar { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
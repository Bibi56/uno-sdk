import org.gradle.internal.os.OperatingSystem

apply plugin: 'java'
apply plugin: 'kotlin'

// jitpack
apply plugin: 'maven'
group = 'com.github.kotlin-graphics'

//apply plugin: 'application'
//mainClassName = 'uno.caps.CapsKt'

buildscript {

    ext.kotlinVersion = '1.2.70'

    repositories {
        mavenCentral()
        jcenter()
        maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap") }
        maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.2.0"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

dependencies {

    ext.kotlin = "org.jetbrains.kotlin:kotlin"
    implementation "$kotlin-stdlib:$kotlinVersion"
    implementation "$kotlin-reflect:$kotlinVersion"

    ext.kx = "com.github.kotlin-graphics"
    implementation "$kx:gln:8aaf6daa0859dcefbe411796f2bb56b4eb989d18"
//    implementation "$kx:vkk:86fe39a"
//    implementation "$kx:appBuffer:39d8216"

    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.1.10'

//    ext.jogl = "2.3.2"
//    compile "org.jogamp.gluegen:gluegen-rt:$jogl"
//    compile "org.jogamp.jogl:jogl-all:$jogl"


    ext.lwjglVersion = "3.2.0"
    switch (OperatingSystem.current()) {
        case OperatingSystem.WINDOWS:
            ext.lwjglNatives = "natives-windows"
            break
        case OperatingSystem.LINUX:
            ext.lwjglNatives = "natives-linux"
            break
        case OperatingSystem.MAC_OS:
            ext.lwjglNatives = "natives-macos"
            break
    }
    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb", "-vulkan"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
        if (it != "-vulkan")
            runtime "org.lwjgl:lwjgl$it:$lwjglVersion:$lwjglNatives"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap") }
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { setUrl("https://jitpack.io") }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}